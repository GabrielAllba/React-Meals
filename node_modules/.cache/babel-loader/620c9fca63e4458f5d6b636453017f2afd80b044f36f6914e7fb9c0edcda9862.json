{"ast":null,"code":"var _jsxFileName = \"C:\\\\1newest_learning_react\\\\react-food\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const response = await fetch(\"https://react-food-499d4-default-rtdb.firebaseio.com/meals.json\");\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this);\n  } else if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n          id: meal.id,\n          name: meal.name,\n          description: meal.description,\n          price: meal.price\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_s(AvailableMeals, \"Bodb5EJzg1lGSKX/9cXe9nVT0aA=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","MealItem","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","map","meal"],"sources":["C:/1newest_learning_react/react-food/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from './AvailableMeals.module.css'\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [httpError, setHttpError] = useState()\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      setIsLoading(true)\r\n      const response = await fetch(\"https://react-food-499d4-default-rtdb.firebaseio.com/meals.json\");  \r\n\r\n      if(!response.ok){\r\n        throw new Error('Something went wrong!')\r\n      }\r\n\r\n      const responseData = await response.json()\r\n\r\n      const loadedMeals = [];\r\n      for(const key in responseData){\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        })\r\n      }\r\n\r\n      setMeals(loadedMeals)\r\n      setIsLoading(false)\r\n    }\r\n    \r\n      fetchMeals().catch(error => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      })\r\n    \r\n      \r\n    \r\n    \r\n  }, [])\r\n  \r\n    if(isLoading){\r\n      return <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    }else if(httpError){\r\n      return <section className={classes.MealsLoading}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    }\r\n    return <section className={classes.meals}>\r\n        <Card>\r\n            <ul>\r\n                {meals.map((meal) => \r\n                <MealItem id={meal.id} key={meal.id} name={meal.name} description={meal.description} price={meal.price}></MealItem>\r\n                )}\r\n            </ul>\r\n        </Card>\r\n    </section>\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,EAAE;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,YAAY;MAC7BH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,CAAC;MAE/F,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAE1C,MAAMC,WAAW,GAAG,EAAE;MACtB,KAAI,MAAMC,GAAG,IAAIH,YAAY,EAAC;QAC5BE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAC3B,CAAC,CAAC;MACJ;MAEAlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAECG,UAAU,EAAE,CAACc,KAAK,CAACC,KAAK,IAAI;MAC1BlB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC;IAC7B,CAAC,CAAC;EAKN,CAAC,EAAE,EAAE,CAAC;EAEJ,IAAGpB,SAAS,EAAC;IACX,oBAAO;MAAS,SAAS,EAAER,OAAO,CAAC6B,YAAa;MAAA,uBAC9C;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACT;EACZ,CAAC,MAAK,IAAGnB,SAAS,EAAC;IACjB,oBAAO;MAAS,SAAS,EAAEV,OAAO,CAAC6B,YAAa;MAAA,uBAC9C;QAAA,UAAInB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACV;EACZ;EACA,oBAAO;IAAS,SAAS,EAAEV,OAAO,CAACM,KAAM;IAAA,uBACrC,QAAC,IAAI;MAAA,uBACD;QAAA,UACKA,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBAChB,QAAC,QAAQ;UAAC,EAAE,EAAEA,IAAI,CAACT,EAAG;UAAe,IAAI,EAAES,IAAI,CAACR,IAAK;UAAC,WAAW,EAAEQ,IAAI,CAACP,WAAY;UAAC,KAAK,EAAEO,IAAI,CAACN;QAAM,GAA3EM,IAAI,CAACT,EAAE;UAAA;UAAA;UAAA;QAAA,QAAgF;MAClH;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AACd,CAAC;AAAC,GA1DIjB,cAAc;AAAA,KAAdA,cAAc;AA4DpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}